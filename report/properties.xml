<?xml version="1.0" encoding="UTF-8"?>
<cprover>
<program>CBMC 5.89.0 (cbmc-5.89.0)</program>
<message type="STATUS-MESSAGE">
  <text>CBMC version 5.89.0 (cbmc-5.89.0) 64-bit arm64 macos</text>
</message>

<message type="STATUS-MESSAGE">
  <text>Reading GOTO program from file build/main.goto</text>
</message>

<message type="STATUS-MESSAGE">
  <text>Generating GOTO Program</text>
</message>

<message type="STATUS-MESSAGE">
  <text>Adding CPROVER library (arm64)</text>
</message>

<message type="WARNING">
  <location file="&lt;built-in-additions&gt;" line="12" working-directory="/Users/romainsoulat/dapps-certification/PTT_doc/MarloweCBMC"/>
  <text>warning: conflicting initializers for variable "__CPROVER_max_malloc_size"
using old value in module cbmc_helper file &lt;built-in-additions&gt; line 12
36028797018963968ul
ignoring new value in module &lt;built-in-library&gt; file &lt;built-in-additions&gt; line 12
9007199254740992ul</text>
</message>

<message type="WARNING">
  <location file="&lt;built-in-additions&gt;" line="12" working-directory="/Users/romainsoulat/dapps-certification/PTT_doc/MarloweCBMC"/>
  <text>warning: conflicting initializers for variable "__CPROVER_max_malloc_size"
using old value in module cbmc_helper file &lt;built-in-additions&gt; line 12
36028797018963968ul
ignoring new value in module &lt;built-in-library&gt; file &lt;built-in-additions&gt; line 12
9007199254740992ul</text>
</message>

<message type="WARNING">
  <location file="&lt;built-in-additions&gt;" line="12" working-directory="/Users/romainsoulat/dapps-certification/PTT_doc/MarloweCBMC"/>
  <text>warning: conflicting initializers for variable "__CPROVER_max_malloc_size"
using old value in module cbmc_helper file &lt;built-in-additions&gt; line 12
36028797018963968ul
ignoring new value in module &lt;built-in-library&gt; file &lt;built-in-additions&gt; line 12
9007199254740992ul</text>
</message>

<message type="WARNING">
  <location file="&lt;built-in-additions&gt;" line="12" working-directory="/Users/romainsoulat/dapps-certification/PTT_doc/MarloweCBMC"/>
  <text>warning: conflicting initializers for variable "__CPROVER_max_malloc_size"
using old value in module cbmc_helper file &lt;built-in-additions&gt; line 12
36028797018963968ul
ignoring new value in module &lt;built-in-library&gt; file &lt;built-in-additions&gt; line 12
9007199254740992ul</text>
</message>

<message type="WARNING">
  <location file="&lt;built-in-additions&gt;" line="12" working-directory="/Users/romainsoulat/dapps-certification/PTT_doc/MarloweCBMC"/>
  <text>warning: conflicting initializers for variable "__CPROVER_max_malloc_size"
using old value in module cbmc_helper file &lt;built-in-additions&gt; line 12
36028797018963968ul
ignoring new value in module &lt;built-in-library&gt; file &lt;built-in-additions&gt; line 12
9007199254740992ul</text>
</message>

<message type="STATUS-MESSAGE">
  <text>Removal of function pointers and virtual functions</text>
</message>

<message type="STATUS-MESSAGE">
  <text>Generic Property Instrumentation</text>
</message>

<message type="STATUS-MESSAGE">
  <text>Running with 10 object bits, 54 offset bits (user-specified)</text>
</message>

<property class="assertion" name="main.assertion.1">
  <location file="src/main.c" function="main" line="228" working-directory="/Users/romainsoulat/dapps-certification/PTT_doc/MarloweCBMC"/>
  <description>Are the properties dead-code -- needs to fail</description>
  <expression>reach == 0</expression>
</property>

<property class="assertion" name="main.assertion.2">
  <location file="src/main.c" function="main" line="232" working-directory="/Users/romainsoulat/dapps-certification/PTT_doc/MarloweCBMC"/>
  <description>Impossible to get a successful contract</description>
  <expression>success == 0</expression>
</property>

<property class="assertion" name="main.assertion.3">
  <location file="src/main.c" function="main" line="233" working-directory="/Users/romainsoulat/dapps-certification/PTT_doc/MarloweCBMC"/>
  <description>Impossible to get a failing contract</description>
  <expression>success == 1</expression>
</property>

<property class="assertion" name="main.assertion.4">
  <location file="src/main.c" function="main" line="237" working-directory="/Users/romainsoulat/dapps-certification/PTT_doc/MarloweCBMC"/>
  <description>Ada are preserved!</description>
  <expression>initialTotalAda == finalTotalAda</expression>
</property>

<property class="assertion" name="main.assertion.5">
  <location file="src/main.c" function="main" line="238" working-directory="/Users/romainsoulat/dapps-certification/PTT_doc/MarloweCBMC"/>
  <description>Dollar are preserved!</description>
  <expression>initialTotalDollar == finalTotalDollar</expression>
</property>

<property class="assertion" name="main.assertion.6">
  <location file="src/main.c" function="main" line="244" working-directory="/Users/romainsoulat/dapps-certification/PTT_doc/MarloweCBMC"/>
  <description>Always finish on a Close contract</description>
  <expression>success != -1</expression>
</property>

<property class="assertion" name="main.assertion.7">
  <location file="src/main.c" function="main" line="247" working-directory="/Users/romainsoulat/dapps-certification/PTT_doc/MarloweCBMC"/>
  <description>No ada left in the contract</description>
  <expression>adaAdaProviderInternal.amount == 0 &amp;&amp; adaDollarProviderInternal.amount == 0</expression>
</property>

<property class="assertion" name="main.assertion.8">
  <location file="src/main.c" function="main" line="248" working-directory="/Users/romainsoulat/dapps-certification/PTT_doc/MarloweCBMC"/>
  <description>No dollar left in the contract</description>
  <expression>dollarAdaProviderInternal.amount == 0 &amp;&amp; dollarDollarProviderInternal.amount == 0</expression>
</property>

<property class="precondition_instance" name="newContract.precondition_instance.1">
  <location file="src/setters.c" function="newContract" line="63" working-directory="/Users/romainsoulat/dapps-certification/PTT_doc/MarloweCBMC"/>
  <description>memcpy src/dst overlap</description>
  <expression>__CPROVER_POINTER_OBJECT((void *)&amp;contract-&gt;params) != __CPROVER_POINTER_OBJECT((const void *)&amp;params) || (const char *)(const void *)&amp;params &gt;= (const char *)(void *)&amp;contract-&gt;params + (signed long int)sizeof(ContractParameters) /*32ul*/  || (const char *)(void *)&amp;contract-&gt;params &gt;= (const char *)(const void *)&amp;params + (signed long int)sizeof(ContractParameters) /*32ul*/ </expression>
</property>

<property class="precondition_instance" name="newContract.precondition_instance.2">
  <location file="src/setters.c" function="newContract" line="63" working-directory="/Users/romainsoulat/dapps-certification/PTT_doc/MarloweCBMC"/>
  <description>memcpy source region readable</description>
  <expression>!(__CPROVER_POINTER_OBJECT(&amp;params) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))</expression>
</property>

<property class="precondition_instance" name="newContract.precondition_instance.3">
  <location file="src/setters.c" function="newContract" line="63" working-directory="/Users/romainsoulat/dapps-certification/PTT_doc/MarloweCBMC"/>
  <description>memcpy destination region writeable</description>
  <expression>!(__CPROVER_POINTER_OBJECT(NULL) == __CPROVER_POINTER_OBJECT(&amp;(*contract))) &amp;&amp; !(__CPROVER_POINTER_OBJECT(&amp;(*contract)) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated)) &amp;&amp; !(__CPROVER_POINTER_OBJECT(&amp;(*contract)) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object)) &amp;&amp; (unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(&amp;(*contract)) &gt;= (unsigned __CPROVER_bitvector[65])__CPROVER_POINTER_OFFSET(&amp;contract-&gt;params) + (unsigned __CPROVER_bitvector[65])sizeof(ContractParameters) /*32*/ </expression>
</property>

<property class="precondition_instance" name="newContractState.precondition_instance.1">
  <location file="src/setters.c" function="newContractState" line="53" working-directory="/Users/romainsoulat/dapps-certification/PTT_doc/MarloweCBMC"/>
  <description>memcpy src/dst overlap</description>
  <expression>__CPROVER_POINTER_OBJECT((void *)&amp;state-&gt;internalWallet) != __CPROVER_POINTER_OBJECT((const void *)internalWallet) || (const char *)(const void *)internalWallet &gt;= (const char *)(void *)&amp;state-&gt;internalWallet + (signed long int)sizeof(InternalWallet) /*16ul*/  || (const char *)(void *)&amp;state-&gt;internalWallet &gt;= (const char *)(const void *)internalWallet + (signed long int)sizeof(InternalWallet) /*16ul*/ </expression>
</property>

<property class="precondition_instance" name="newContractState.precondition_instance.2">
  <location file="src/setters.c" function="newContractState" line="53" working-directory="/Users/romainsoulat/dapps-certification/PTT_doc/MarloweCBMC"/>
  <description>memcpy source region readable</description>
  <expression>!(__CPROVER_POINTER_OBJECT(NULL) == __CPROVER_POINTER_OBJECT(internalWallet)) &amp;&amp; !IS_INVALID_POINTER(internalWallet) &amp;&amp; !(__CPROVER_POINTER_OBJECT(internalWallet) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated)) &amp;&amp; !(__CPROVER_POINTER_OBJECT(internalWallet) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object)) &amp;&amp; (unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(internalWallet) &gt;= (unsigned __CPROVER_bitvector[65])__CPROVER_POINTER_OFFSET(internalWallet) + (unsigned __CPROVER_bitvector[65])sizeof(InternalWallet) /*16*/  &amp;&amp; (!(__CPROVER_POINTER_OBJECT(NULL) == __CPROVER_POINTER_OBJECT(internalWallet)) || internalWallet == ((InternalWallet *)NULL))</expression>
</property>

<property class="precondition_instance" name="newContractState.precondition_instance.3">
  <location file="src/setters.c" function="newContractState" line="53" working-directory="/Users/romainsoulat/dapps-certification/PTT_doc/MarloweCBMC"/>
  <description>memcpy destination region writeable</description>
  <expression>!(__CPROVER_POINTER_OBJECT(NULL) == __CPROVER_POINTER_OBJECT(&amp;(*state))) &amp;&amp; !(__CPROVER_POINTER_OBJECT(&amp;(*state)) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated)) &amp;&amp; !(__CPROVER_POINTER_OBJECT(&amp;(*state)) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object)) &amp;&amp; (unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(&amp;(*state)) &gt;= (unsigned __CPROVER_bitvector[65])__CPROVER_POINTER_OFFSET(&amp;state-&gt;internalWallet) + (unsigned __CPROVER_bitvector[65])sizeof(InternalWallet) /*16*/ </expression>
</property>

<property class="precondition_instance" name="newContractState.precondition_instance.4">
  <location file="src/setters.c" function="newContractState" line="55" working-directory="/Users/romainsoulat/dapps-certification/PTT_doc/MarloweCBMC"/>
  <description>memcpy src/dst overlap</description>
  <expression>__CPROVER_POINTER_OBJECT((void *)state-&gt;parties) != __CPROVER_POINTER_OBJECT((const void *)parties) || (const char *)(const void *)parties &gt;= (const char *)(void *)state-&gt;parties + (signed long int)(sizeof(Party *) /*8ul*/  * (unsigned long int)numParties) || (const char *)(void *)state-&gt;parties &gt;= (const char *)(const void *)parties + (signed long int)(sizeof(Party *) /*8ul*/  * (unsigned long int)numParties)</expression>
</property>

<property class="precondition_instance" name="newContractState.precondition_instance.5">
  <location file="src/setters.c" function="newContractState" line="55" working-directory="/Users/romainsoulat/dapps-certification/PTT_doc/MarloweCBMC"/>
  <description>memcpy source region readable</description>
  <expression>!(__CPROVER_POINTER_OBJECT(NULL) == __CPROVER_POINTER_OBJECT(parties)) &amp;&amp; !IS_INVALID_POINTER(parties) &amp;&amp; !(__CPROVER_POINTER_OBJECT(parties) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated)) &amp;&amp; !(__CPROVER_POINTER_OBJECT(parties) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object)) &amp;&amp; (unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(parties) &gt;= (unsigned __CPROVER_bitvector[65])__CPROVER_POINTER_OFFSET(parties) + (unsigned __CPROVER_bitvector[65])(sizeof(Party *) /*8ul*/  * (unsigned long int)numParties) &amp;&amp; (!(__CPROVER_POINTER_OBJECT(NULL) == __CPROVER_POINTER_OBJECT(parties)) || parties == ((Party **)NULL))</expression>
</property>

<property class="precondition_instance" name="newContractState.precondition_instance.6">
  <location file="src/setters.c" function="newContractState" line="55" working-directory="/Users/romainsoulat/dapps-certification/PTT_doc/MarloweCBMC"/>
  <description>memcpy destination region writeable</description>
  <expression>!(__CPROVER_POINTER_OBJECT(NULL) == __CPROVER_POINTER_OBJECT(state-&gt;parties)) &amp;&amp; !IS_INVALID_POINTER(state-&gt;parties) &amp;&amp; !(__CPROVER_POINTER_OBJECT(state-&gt;parties) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated)) &amp;&amp; !(__CPROVER_POINTER_OBJECT(state-&gt;parties) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object)) &amp;&amp; (unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(state-&gt;parties) &gt;= (unsigned __CPROVER_bitvector[65])__CPROVER_POINTER_OFFSET(state-&gt;parties) + (unsigned __CPROVER_bitvector[65])(sizeof(Party *) /*8ul*/  * (unsigned long int)numParties) &amp;&amp; (!(__CPROVER_POINTER_OBJECT(NULL) == __CPROVER_POINTER_OBJECT(state-&gt;parties)) || state-&gt;parties == ((Party **)NULL))</expression>
</property>

<property class="precondition_instance" name="newInternalWallet.precondition_instance.1">
  <location file="src/setters.c" function="newInternalWallet" line="45" working-directory="/Users/romainsoulat/dapps-certification/PTT_doc/MarloweCBMC"/>
  <description>memcpy src/dst overlap</description>
  <expression>__CPROVER_POINTER_OBJECT((void *)wallet-&gt;accounts) != __CPROVER_POINTER_OBJECT((const void *)accounts) || (const char *)(const void *)accounts &gt;= (const char *)(void *)wallet-&gt;accounts + (signed long int)(sizeof(InternalAccount) /*24ul*/  * (unsigned long int)numAccounts) || (const char *)(void *)wallet-&gt;accounts &gt;= (const char *)(const void *)accounts + (signed long int)(sizeof(InternalAccount) /*24ul*/  * (unsigned long int)numAccounts)</expression>
</property>

<property class="precondition_instance" name="newInternalWallet.precondition_instance.2">
  <location file="src/setters.c" function="newInternalWallet" line="45" working-directory="/Users/romainsoulat/dapps-certification/PTT_doc/MarloweCBMC"/>
  <description>memcpy source region readable</description>
  <expression>!(__CPROVER_POINTER_OBJECT(NULL) == __CPROVER_POINTER_OBJECT(accounts)) &amp;&amp; !IS_INVALID_POINTER(accounts) &amp;&amp; !(__CPROVER_POINTER_OBJECT(accounts) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated)) &amp;&amp; !(__CPROVER_POINTER_OBJECT(accounts) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object)) &amp;&amp; (unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(accounts) &gt;= (unsigned __CPROVER_bitvector[65])__CPROVER_POINTER_OFFSET(accounts) + (unsigned __CPROVER_bitvector[65])(sizeof(InternalAccount) /*24ul*/  * (unsigned long int)numAccounts) &amp;&amp; (!(__CPROVER_POINTER_OBJECT(NULL) == __CPROVER_POINTER_OBJECT(accounts)) || accounts == ((InternalAccount *)NULL))</expression>
</property>

<property class="precondition_instance" name="newInternalWallet.precondition_instance.3">
  <location file="src/setters.c" function="newInternalWallet" line="45" working-directory="/Users/romainsoulat/dapps-certification/PTT_doc/MarloweCBMC"/>
  <description>memcpy destination region writeable</description>
  <expression>!(__CPROVER_POINTER_OBJECT(NULL) == __CPROVER_POINTER_OBJECT(wallet-&gt;accounts)) &amp;&amp; !IS_INVALID_POINTER(wallet-&gt;accounts) &amp;&amp; !(__CPROVER_POINTER_OBJECT(wallet-&gt;accounts) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated)) &amp;&amp; !(__CPROVER_POINTER_OBJECT(wallet-&gt;accounts) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object)) &amp;&amp; (unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(wallet-&gt;accounts) &gt;= (unsigned __CPROVER_bitvector[65])__CPROVER_POINTER_OFFSET(wallet-&gt;accounts) + (unsigned __CPROVER_bitvector[65])(sizeof(InternalAccount) /*24ul*/  * (unsigned long int)numAccounts) &amp;&amp; (!(__CPROVER_POINTER_OBJECT(NULL) == __CPROVER_POINTER_OBJECT(wallet-&gt;accounts)) || wallet-&gt;accounts == ((InternalAccount *)NULL))</expression>
</property>

<property class="precondition_instance" name="newWallet.precondition_instance.1">
  <location file="src/setters.c" function="newWallet" line="19" working-directory="/Users/romainsoulat/dapps-certification/PTT_doc/MarloweCBMC"/>
  <description>memcpy src/dst overlap</description>
  <expression>__CPROVER_POINTER_OBJECT((void *)wallet-&gt;tokens) != __CPROVER_POINTER_OBJECT((const void *)tokens) || (const char *)(const void *)tokens &gt;= (const char *)(void *)wallet-&gt;tokens + (signed long int)(sizeof(Token) /*8ul*/  * (unsigned long int)numTokens) || (const char *)(void *)wallet-&gt;tokens &gt;= (const char *)(const void *)tokens + (signed long int)(sizeof(Token) /*8ul*/  * (unsigned long int)numTokens)</expression>
</property>

<property class="precondition_instance" name="newWallet.precondition_instance.2">
  <location file="src/setters.c" function="newWallet" line="19" working-directory="/Users/romainsoulat/dapps-certification/PTT_doc/MarloweCBMC"/>
  <description>memcpy source region readable</description>
  <expression>!(__CPROVER_POINTER_OBJECT(NULL) == __CPROVER_POINTER_OBJECT(tokens)) &amp;&amp; !IS_INVALID_POINTER(tokens) &amp;&amp; !(__CPROVER_POINTER_OBJECT(tokens) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated)) &amp;&amp; !(__CPROVER_POINTER_OBJECT(tokens) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object)) &amp;&amp; (unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(tokens) &gt;= (unsigned __CPROVER_bitvector[65])__CPROVER_POINTER_OFFSET(tokens) + (unsigned __CPROVER_bitvector[65])(sizeof(Token) /*8ul*/  * (unsigned long int)numTokens) &amp;&amp; (!(__CPROVER_POINTER_OBJECT(NULL) == __CPROVER_POINTER_OBJECT(tokens)) || tokens == ((Token *)NULL))</expression>
</property>

<property class="precondition_instance" name="newWallet.precondition_instance.3">
  <location file="src/setters.c" function="newWallet" line="19" working-directory="/Users/romainsoulat/dapps-certification/PTT_doc/MarloweCBMC"/>
  <description>memcpy destination region writeable</description>
  <expression>!(__CPROVER_POINTER_OBJECT(NULL) == __CPROVER_POINTER_OBJECT(wallet-&gt;tokens)) &amp;&amp; !IS_INVALID_POINTER(wallet-&gt;tokens) &amp;&amp; !(__CPROVER_POINTER_OBJECT(wallet-&gt;tokens) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated)) &amp;&amp; !(__CPROVER_POINTER_OBJECT(wallet-&gt;tokens) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object)) &amp;&amp; (unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(wallet-&gt;tokens) &gt;= (unsigned __CPROVER_bitvector[65])__CPROVER_POINTER_OFFSET(wallet-&gt;tokens) + (unsigned __CPROVER_bitvector[65])(sizeof(Token) /*8ul*/  * (unsigned long int)numTokens) &amp;&amp; (!(__CPROVER_POINTER_OBJECT(NULL) == __CPROVER_POINTER_OBJECT(wallet-&gt;tokens)) || wallet-&gt;tokens == ((Token *)NULL))</expression>
</property>

<property class="precondition_instance" name="newParty.precondition_instance.1">
  <location file="src/setters.c" function="newParty" line="29" working-directory="/Users/romainsoulat/dapps-certification/PTT_doc/MarloweCBMC"/>
  <description>memcpy src/dst overlap</description>
  <expression>__CPROVER_POINTER_OBJECT((void *)&amp;party-&gt;wallet) != __CPROVER_POINTER_OBJECT((const void *)wallet) || (const char *)(const void *)wallet &gt;= (const char *)(void *)&amp;party-&gt;wallet + (signed long int)sizeof(Wallet) /*16ul*/  || (const char *)(void *)&amp;party-&gt;wallet &gt;= (const char *)(const void *)wallet + (signed long int)sizeof(Wallet) /*16ul*/ </expression>
</property>

<property class="precondition_instance" name="newParty.precondition_instance.2">
  <location file="src/setters.c" function="newParty" line="29" working-directory="/Users/romainsoulat/dapps-certification/PTT_doc/MarloweCBMC"/>
  <description>memcpy source region readable</description>
  <expression>!(__CPROVER_POINTER_OBJECT(NULL) == __CPROVER_POINTER_OBJECT(wallet)) &amp;&amp; !IS_INVALID_POINTER(wallet) &amp;&amp; !(__CPROVER_POINTER_OBJECT(wallet) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated)) &amp;&amp; !(__CPROVER_POINTER_OBJECT(wallet) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object)) &amp;&amp; (unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(wallet) &gt;= (unsigned __CPROVER_bitvector[65])__CPROVER_POINTER_OFFSET(wallet) + (unsigned __CPROVER_bitvector[65])sizeof(Wallet) /*16*/  &amp;&amp; (!(__CPROVER_POINTER_OBJECT(NULL) == __CPROVER_POINTER_OBJECT(wallet)) || wallet == ((Wallet *)NULL))</expression>
</property>

<property class="precondition_instance" name="newParty.precondition_instance.3">
  <location file="src/setters.c" function="newParty" line="29" working-directory="/Users/romainsoulat/dapps-certification/PTT_doc/MarloweCBMC"/>
  <description>memcpy destination region writeable</description>
  <expression>!(__CPROVER_POINTER_OBJECT(NULL) == __CPROVER_POINTER_OBJECT(&amp;(*party))) &amp;&amp; !(__CPROVER_POINTER_OBJECT(&amp;(*party)) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated)) &amp;&amp; !(__CPROVER_POINTER_OBJECT(&amp;(*party)) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object)) &amp;&amp; (unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(&amp;(*party)) &gt;= (unsigned __CPROVER_bitvector[65])__CPROVER_POINTER_OFFSET(&amp;party-&gt;wallet) + (unsigned __CPROVER_bitvector[65])sizeof(Wallet) /*16*/ </expression>
</property>

<property class="precondition_instance" name="newInternalAccount.precondition_instance.1">
  <location file="src/setters.c" function="newInternalAccount" line="37" working-directory="/Users/romainsoulat/dapps-certification/PTT_doc/MarloweCBMC"/>
  <description>memcpy src/dst overlap</description>
  <expression>__CPROVER_POINTER_OBJECT((void *)&amp;account-&gt;wallet) != __CPROVER_POINTER_OBJECT((const void *)&amp;wallet) || (const char *)(const void *)&amp;wallet &gt;= (const char *)(void *)&amp;account-&gt;wallet + (signed long int)sizeof(Wallet) /*16ul*/  || (const char *)(void *)&amp;account-&gt;wallet &gt;= (const char *)(const void *)&amp;wallet + (signed long int)sizeof(Wallet) /*16ul*/ </expression>
</property>

<property class="precondition_instance" name="newInternalAccount.precondition_instance.2">
  <location file="src/setters.c" function="newInternalAccount" line="37" working-directory="/Users/romainsoulat/dapps-certification/PTT_doc/MarloweCBMC"/>
  <description>memcpy source region readable</description>
  <expression>!(__CPROVER_POINTER_OBJECT(&amp;wallet) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))</expression>
</property>

<property class="precondition_instance" name="newInternalAccount.precondition_instance.3">
  <location file="src/setters.c" function="newInternalAccount" line="37" working-directory="/Users/romainsoulat/dapps-certification/PTT_doc/MarloweCBMC"/>
  <description>memcpy destination region writeable</description>
  <expression>!(__CPROVER_POINTER_OBJECT(NULL) == __CPROVER_POINTER_OBJECT(&amp;(*account))) &amp;&amp; !(__CPROVER_POINTER_OBJECT(&amp;(*account)) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated)) &amp;&amp; !(__CPROVER_POINTER_OBJECT(&amp;(*account)) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object)) &amp;&amp; (unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(&amp;(*account)) &gt;= (unsigned __CPROVER_bitvector[65])__CPROVER_POINTER_OFFSET(&amp;account-&gt;wallet) + (unsigned __CPROVER_bitvector[65])sizeof(Wallet) /*16*/ </expression>
</property>

<property class="assertion" name="malloc.assertion.1">
  <location file="&lt;builtin-library-malloc&gt;" function="malloc" line="31" working-directory="/Users/romainsoulat/dapps-certification/PTT_doc/MarloweCBMC"/>
  <description>max allocation size exceeded</description>
  <expression>malloc_size &lt;= __CPROVER_max_malloc_size</expression>
</property>

<property class="assertion" name="malloc.assertion.2">
  <location file="&lt;builtin-library-malloc&gt;" function="malloc" line="36" working-directory="/Users/romainsoulat/dapps-certification/PTT_doc/MarloweCBMC"/>
  <description>max allocation may fail</description>
  <expression>!(0 != 0) || !should_malloc_fail</expression>
</property>

</cprover>
